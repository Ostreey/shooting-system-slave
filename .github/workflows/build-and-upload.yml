name: Build and Release Firmware

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  actions: read

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: false
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        
    - name: Clean PlatformIO cache
      run: |
        pio run --target clean
        rm -rf .pio/libdeps/
        
    - name: Build firmware
      run: |
        pio run
        
    - name: Extract version from source
      id: version
      run: |
        VERSION=$(grep -o '#define FIRMWARE_VERSION "[^"]*"' src/Config.h | cut -d'"' -f2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Firmware version: $VERSION"
        
    - name: Create build artifacts
      run: |
        mkdir -p build-output
        cp .pio/build/esp32doit-devkit-v1/firmware.bin build-output/
        
        # Create metadata
        cat > build-output/metadata.json << EOF
        {
          "version": "${{ steps.version.outputs.version }}",
          "buildDate": "$(date -u +%Y-%m-%d)",
          "buildTime": "$(date -u +%H:%M:%S)",
          "fileSize": $(stat -c%s .pio/build/esp32doit-devkit-v1/firmware.bin),
          "changelog": "Auto-built from GitHub commit ${{ github.sha }}",
          "commitHash": "${{ github.sha }}"
        }
        EOF
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Firmware v${{ steps.version.outputs.version }}
        body: |
          ## Firmware Release v${{ steps.version.outputs.version }}
          
          **Build Date:** $(date -u +%Y-%m-%d)
          **Commit:** ${{ github.sha }}
          
          ### Files:
          - `firmware.bin` - Main firmware file
          - `metadata.json` - Build information
          
          ### Installation:
          1. Download the firmware.bin file
          2. Use your Shooting Buddy app to update the device
        files: |
          build-output/firmware.bin
          build-output/metadata.json
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
